Equipement (
    #numero de serie : integer,
    nature : string,
    type : string,
    modèle :string,
    marque : string,
    prix : integer,
    configuration => La_configuration
    ) avec tout les attributs NOT NULL
    
On va supposer que le prix d'un équipement est un nombre entier, et que le numéro de série d'un équipement est unique et donc c'est la clé primaire ce qui va permettre de différencier tout les équipements.

L_intervention (
    #numero : integer,
    prix : integer,
    dtIntervention : date,
    dtPanne: date,
    description : string,
    numero_equip => Equipement,
    technicien => Technicien,
    Unite => Unite_de_gestion,
    ) avec numero, dtIntervention, dtPanne, description, num_equip, technicien et Unite NOT NULL
    
Ici le numéro de l'intervention va permettre de différencier les différentes interventions , il est unique et c'est donc la clé primaire.

Technicien (
    nom : string,
    prénom : string,
    #numero_de_telephone : integer,
    fournisseur => Fournisseur,
    ) avec nom, prénom, numero_de_telephone et fournisseur NOT NULL
    
Pour les techniciens, le numero_de_telephone est unique et c'est donc la clé primaire pour permettre les différenier.

La_configuration (
    #id : integer,
    dtAchat : date,
    fournisseur => Fournisseur,
    contrat => Le_contrat_de_maintenance
    ) avec dtAchat et fournisseur NOT NULL
    
On décide de créer ici aussi un id pour les configurations, c'est la clé primaire qui va permettre de les distinguer.

Le_fournisseur (
    #code : integer,
    nom : string,
    numero_de_telephone : integer,
    adresse_e_mail : string,
    ) avec tout les attributs NOT NULL
    
Le fournisseur possède un code unique, il est non nul, c'est donc la clé primaire pour cette classe.

La_localite (
    #id : integer,
    numero : integer,
    rue : string,
    code_postal : integer,
    nom_de_ville : string,
    fournisseur => Fournisseur
    ) avec tout les attributs NOT NULL
    
On ajoute un id pour les localités, qui servira de clé primaire pour pouvoir différencier les localités car il se peut qu'elles aient en commun des attributs de la classe.

Le_contrat_de_maintenance (
    #id : integer,
    mode_de_paiement : {especes,carte_bleue,chèque,virement),
    montant : integer,
    dtSignature : date,
    fournisseur => Fournisseur,
    ) avec tout les attributs NOT NULL
    
Pour cette classe aussi on choisit d'utiliser un id en tant que clé primaire pour différencier les contrats car il se peut que des contrats de maintenance aient en commun plusieurs des attributs.
    
Unite_de_gestion (
    #nom : string,
    nombre_de_membres : integer,
    )  avec nom et nombre_de_membres NOT NULL
    
Ici on a supposé le nom de l'unité de gestion unique au sein de la société pour permettre de différencier toutes les unités. C'est donc notre clé primaire pour cette classe.

    
Affectation (
    dtAffectation : date,
    #configuration => La_configuration,
    #unite => Unite_de_gestion,
    ) avec dtAffectation, configuration et Unite NOT NULL
    
On a une relation N:M entre La_configuration et Unite_de_gestion donc on doit créer une nouvelle classe : Affectation, dont la clé primaire sera (configuration,unite) référant aux deux tables.
    
    
